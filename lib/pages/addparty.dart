import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';

void main() {
  runApp(AddParty());
}
class CountryData {
  final String name;
  final int stdCode;
  final String flagIcon;

  CountryData({required this.name, required this.stdCode, required this.flagIcon});
}
class AddParty extends StatelessWidget {
   AddParty({super.key});
   final List<CountryData> countryDataList = [
     CountryData(name:'Afghanistan', stdCode:93,flagIcon:'ğŸ‡¦ğŸ‡«'),
     CountryData(name:'Ã…land Islands', stdCode:358,flagIcon:'ğŸ‡¦ğŸ‡½'),
     CountryData(name:'Albania', stdCode:355,flagIcon:'ğŸ‡¦ğŸ‡±'),
     CountryData(name:'Algeria', stdCode:213,flagIcon:'ğŸ‡©ğŸ‡¿'),
     CountryData(name:'American Samoa', stdCode:1684,flagIcon:'ğŸ‡¦ğŸ‡¸'),
     CountryData(name:'Andorra', stdCode:376,flagIcon:'ğŸ‡¦ğŸ‡©'),
     CountryData(name:'Angola', stdCode:244,flagIcon:'ğŸ‡¦ğŸ‡´'),
     CountryData(name:'Anguilla', stdCode:1264,flagIcon:'ğŸ‡¦ğŸ‡®'),
     CountryData(name:'Antarctica', stdCode:672,flagIcon:'ğŸ‡¦ğŸ‡¶'),
     CountryData(name:'Antigua and Barbuda', stdCode:1268,flagIcon:'ğŸ‡¦ğŸ‡¬'),
     CountryData(name:'Argentina', stdCode:54,flagIcon:'ğŸ‡¦ğŸ‡·'),
     CountryData(name:'Armenia', stdCode:374,flagIcon:'ğŸ‡¦ğŸ‡²'),
     CountryData(name:'Aruba', stdCode:297,flagIcon:'ğŸ‡¦ğŸ‡¼'),
     CountryData(name:'Australia', stdCode:61,flagIcon:'ğŸ‡¦ğŸ‡º'),
     CountryData(name:'Austria', stdCode:43,flagIcon:'ğŸ‡¦ğŸ‡¹'),
     CountryData(name:'Azerbaijan', stdCode:994,flagIcon:'ğŸ‡¦ğŸ‡¿'),
     CountryData(name:'Bahamas', stdCode:1242,flagIcon:'ğŸ‡§ğŸ‡¸'),
     CountryData(name:'Bahrain', stdCode:973,flagIcon:'ğŸ‡§ğŸ‡­'),
     CountryData(name:'Bangladesh', stdCode:880,flagIcon:'ğŸ‡§ğŸ‡©'),
     CountryData(name:'Barbados', stdCode:1246,flagIcon:'ğŸ‡§ğŸ‡§'),
     CountryData(name:'Belarus', stdCode:375,flagIcon:'ğŸ‡§ğŸ‡¾'),
     CountryData(name:'Belgium', stdCode:32,flagIcon:'ğŸ‡§ğŸ‡ª'),
     CountryData(name:'Belize', stdCode:501,flagIcon:'ğŸ‡§ğŸ‡¿'),
     CountryData(name:'Benin', stdCode:229,flagIcon:'ğŸ‡§ğŸ‡¯'),
     CountryData(name:'Bermuda', stdCode:1441,flagIcon:'ğŸ‡§ğŸ‡²'),
     CountryData(name:'Bhutan', stdCode:975,flagIcon:'ğŸ‡§ğŸ‡¹'),
     CountryData(name:'Bolivia, Plurinational State of bolivia', stdCode:591,flagIcon:'ğŸ‡§ğŸ‡´'),
     CountryData(name:'Bosnia and Herzegovina', stdCode:387,flagIcon:'ğŸ‡§ğŸ‡¦'),
     CountryData(name:'Botswana', stdCode:267,flagIcon:'ğŸ‡§ğŸ‡¼'),
     CountryData(name:'Bouvet Island', stdCode:47,flagIcon:'ğŸ‡§ğŸ‡»'),
     CountryData(name:'Brazil', stdCode:55,flagIcon:'ğŸ‡§ğŸ‡·'),
     CountryData(name:'British Indian Ocean Territory', stdCode:246,flagIcon:'ğŸ‡®ğŸ‡´'),
     CountryData(name:'Brunei Darussalam', stdCode:673,flagIcon:'ğŸ‡§ğŸ‡³'),
     CountryData(name:'Bulgaria', stdCode:359,flagIcon:'ğŸ‡§ğŸ‡¬'),
     CountryData(name:'Burkina Faso', stdCode:226,flagIcon:'ğŸ‡§ğŸ‡«'),
     CountryData(name:'Burundi', stdCode:257,flagIcon:'ğŸ‡§ğŸ‡®'),
     CountryData(name:'Cambodia', stdCode:855,flagIcon:'ğŸ‡°ğŸ‡­'),
     CountryData(name:'Cameroon', stdCode:237,flagIcon:'ğŸ‡¨ğŸ‡²'),
     CountryData(name:'Canada', stdCode:1,flagIcon:'ğŸ‡¨ğŸ‡¦'),
     CountryData(name:'Cape Verde', stdCode:238,flagIcon:'ğŸ‡¨ğŸ‡»'),
     CountryData(name:'Cayman Islands', stdCode:345,flagIcon:'ğŸ‡°ğŸ‡¾'),
     CountryData(name:'Central African Republic', stdCode:236,flagIcon:'ğŸ‡¨ğŸ‡«'),
     CountryData(name:'Chad', stdCode:235,flagIcon:'ğŸ‡¹ğŸ‡©'),
     CountryData(name:'Chile', stdCode:56,flagIcon:'ğŸ‡¨ğŸ‡±'),
     CountryData(name:'China', stdCode:86,flagIcon:'ğŸ‡¨ğŸ‡³'),
     CountryData(name:'Christmas Island', stdCode:61,flagIcon:'ğŸ‡¨ğŸ‡½'),
     CountryData(name:'Cocos (Keeling) Islands', stdCode:61,flagIcon:'ğŸ‡¨ğŸ‡¨'),
     CountryData(name:'Colombia', stdCode:57,flagIcon:'ğŸ‡¨ğŸ‡´'),
     CountryData(name:'Comoros', stdCode:269,flagIcon:'ğŸ‡°ğŸ‡²'),
     CountryData(name:'Congo', stdCode:242,flagIcon:'ğŸ‡¨ğŸ‡¬'),
     CountryData(name:'Congo, The Democratic Republic of the Congo', stdCode:243,flagIcon:'ğŸ‡¨ğŸ‡©'),
     CountryData(name:'Cook Islands', stdCode:682,flagIcon:'ğŸ‡¨ğŸ‡°'),
     CountryData(name:'Costa Rica', stdCode:506,flagIcon:'ğŸ‡¨ğŸ‡·'),
     CountryData(name:'Cote d\'Ivoire', stdCode:225,flagIcon:'ğŸ‡¨ğŸ‡®'),
     CountryData(name:'Croatia', stdCode:385,flagIcon:'ğŸ‡­ğŸ‡·'),
     CountryData(name:'Cuba', stdCode:53,flagIcon:'ğŸ‡¨ğŸ‡º'),
     CountryData(name:'Cyprus', stdCode:357,flagIcon:'ğŸ‡¨ğŸ‡¾'),
     CountryData(name:'Czech Republic', stdCode:420,flagIcon:'ğŸ‡¨ğŸ‡¿'),
     CountryData(name:'Denmark', stdCode:45,flagIcon:'ğŸ‡©ğŸ‡°'),
     CountryData(name:'Djibouti', stdCode:253,flagIcon:'ğŸ‡©ğŸ‡¯'),
     CountryData(name:'Dominica', stdCode:1767,flagIcon:'ğŸ‡©ğŸ‡²'),
     CountryData(name:'Dominican Republic', stdCode:1849,flagIcon:'ğŸ‡©ğŸ‡´'),
     CountryData(name:'Ecuador', stdCode:593,flagIcon:'ğŸ‡ªğŸ‡¨'),
     CountryData(name:'Egypt', stdCode:20,flagIcon:'ğŸ‡ªğŸ‡¬'),
     CountryData(name:'El Salvador', stdCode:503,flagIcon:'ğŸ‡¸ğŸ‡»'),
     CountryData(name:'Equatorial Guinea', stdCode:240,flagIcon:'ğŸ‡¬ğŸ‡¶'),
     CountryData(name:'Eritrea', stdCode:291,flagIcon:'ğŸ‡ªğŸ‡·'),
     CountryData(name:'Estonia', stdCode:372,flagIcon:'ğŸ‡ªğŸ‡ª'),
     CountryData(name:'Ethiopia', stdCode:251,flagIcon:'ğŸ‡ªğŸ‡¹'),
     CountryData(name:'Falkland Islands (Malvinas)', stdCode:500,flagIcon:'ğŸ‡«ğŸ‡°'),
     CountryData(name:'Faroe Islands', stdCode:298,flagIcon:'ğŸ‡«ğŸ‡´'),
     CountryData(name:'Fiji', stdCode:679,flagIcon:'ğŸ‡«ğŸ‡¯'),
     CountryData(name:'Finland', stdCode:358,flagIcon:'ğŸ‡«ğŸ‡®'),
     CountryData(name:'France', stdCode:33,flagIcon:'ğŸ‡«ğŸ‡·'),
     CountryData(name:'French Guiana', stdCode:594,flagIcon:'ğŸ‡¬ğŸ‡«'),
     CountryData(name:'French Polynesia', stdCode:689,flagIcon:'ğŸ‡µğŸ‡«'),
     CountryData(name:'French Southern Territories', stdCode:262,flagIcon:'ğŸ‡¹ğŸ‡«'),
     CountryData(name:'Gabon', stdCode:241,flagIcon:'ğŸ‡¬ğŸ‡¦'),
     CountryData(name:'Gambia', stdCode:220,flagIcon:'ğŸ‡¬ğŸ‡²'),
     CountryData(name:'Georgia', stdCode:995,flagIcon:'ğŸ‡¬ğŸ‡ª'),
     CountryData(name:'Germany', stdCode:49,flagIcon:'ğŸ‡©ğŸ‡ª'),
     CountryData(name:'Ghana', stdCode:233,flagIcon:'ğŸ‡¬ğŸ‡­'),
     CountryData(name:'Gibraltar', stdCode:350,flagIcon:'ğŸ‡¬ğŸ‡®'),
     CountryData(name:'Greece', stdCode:30,flagIcon:'ğŸ‡¬ğŸ‡·'),
     CountryData(name:'Greenland', stdCode:299,flagIcon:'ğŸ‡¬ğŸ‡±'),
     CountryData(name:'Grenada', stdCode:1473,flagIcon:'ğŸ‡¬ğŸ‡©'),
     CountryData(name:'Guadeloupe', stdCode:590,flagIcon:'ğŸ‡¬ğŸ‡µ'),
     CountryData(name:'Guam', stdCode:1671,flagIcon:'ğŸ‡¬ğŸ‡º'),
     CountryData(name:'Guatemala', stdCode:502,flagIcon:'ğŸ‡¬ğŸ‡¹'),
     CountryData(name:'Guernsey', stdCode:44,flagIcon:'ğŸ‡¬ğŸ‡¬'),
     CountryData(name:'Guinea', stdCode:224,flagIcon:'ğŸ‡¬ğŸ‡³'),
     CountryData(name:'Guinea-Bissau', stdCode:245,flagIcon:'ğŸ‡¬ğŸ‡¼'),
     CountryData(name:'Guyana', stdCode:592,flagIcon:'ğŸ‡¬ğŸ‡¾'),
     CountryData(name:'Haiti', stdCode:509,flagIcon:'ğŸ‡­ğŸ‡¹'),
     CountryData(name:'Heard Island and Mcdonald Islands', stdCode:672,flagIcon:'ğŸ‡­ğŸ‡²'),
     CountryData(name:'Holy See (Vatican City State)', stdCode:379,flagIcon:'ğŸ‡»ğŸ‡¦'),
     CountryData(name:'Honduras', stdCode:504,flagIcon:'ğŸ‡­ğŸ‡³'),
     CountryData(name:'Hong Kong', stdCode:852,flagIcon:'ğŸ‡­ğŸ‡°'),
     CountryData(name:'Hungary', stdCode:36,flagIcon:'ğŸ‡­ğŸ‡º'),
     CountryData(name:'Iceland', stdCode:354,flagIcon:'ğŸ‡®ğŸ‡¸'),
     CountryData(name:'India', stdCode:91,flagIcon:'ğŸ‡®ğŸ‡³'),
     CountryData(name:'Indonesia', stdCode:62,flagIcon:'ğŸ‡®ğŸ‡©'),
     CountryData(name:'Iran, Islamic Republic of Persian Gulf', stdCode:98,flagIcon:'ğŸ‡®ğŸ‡·'),
     CountryData(name:'Iraq', stdCode:964,flagIcon:'ğŸ‡®ğŸ‡¶'),
     CountryData(name:'Ireland', stdCode:353,flagIcon:'ğŸ‡®ğŸ‡ª'),
     CountryData(name:'Isle of Man', stdCode:44,flagIcon:'ğŸ‡®ğŸ‡²'),
     CountryData(name:'Israel', stdCode:972,flagIcon:'ğŸ‡®ğŸ‡±'),
     CountryData(name:'Italy', stdCode:39,flagIcon:'ğŸ‡®ğŸ‡¹'),
     CountryData(name:'Jamaica', stdCode:1876,flagIcon:'ğŸ‡¯ğŸ‡²'),
     CountryData(name:'Japan', stdCode:81,flagIcon:'ğŸ‡¯ğŸ‡µ'),
     CountryData(name:'Jersey', stdCode:44,flagIcon:'ğŸ‡¯ğŸ‡ª'),
     CountryData(name:'Jordan', stdCode:962,flagIcon:'ğŸ‡¯ğŸ‡´'),
     CountryData(name:'Kazakhstan', stdCode:7,flagIcon:'ğŸ‡°ğŸ‡¿'),
     CountryData(name:'Kenya', stdCode:254,flagIcon:'ğŸ‡°ğŸ‡ª'),
     CountryData(name:'Kiribati', stdCode:686,flagIcon:'ğŸ‡°ğŸ‡®'),
     CountryData(name:'Korea, Democratic People\'s Republic of Korea', stdCode:850,flagIcon:'ğŸ‡°ğŸ‡µ'),
     CountryData(name:'Korea, Republic of South Korea', stdCode:82,flagIcon:'ğŸ‡°ğŸ‡·'),
     CountryData(name:'Kosovo', stdCode:383,flagIcon:'ğŸ‡½ğŸ‡°'),
     CountryData(name:'Kuwait', stdCode:965,flagIcon:'ğŸ‡°ğŸ‡¼'),
     CountryData(name:'Kyrgyzstan', stdCode:996,flagIcon:'ğŸ‡°ğŸ‡¬'),
     CountryData(name:'Laos', stdCode:856,flagIcon:'ğŸ‡±ğŸ‡¦'),
     CountryData(name:'Latvia', stdCode:371,flagIcon:'ğŸ‡±ğŸ‡»'),
     CountryData(name:'Lebanon', stdCode:961,flagIcon:'ğŸ‡±ğŸ‡§'),
     CountryData(name:'Lesotho', stdCode:266,flagIcon:'ğŸ‡±ğŸ‡¸'),
     CountryData(name:'Liberia', stdCode:231,flagIcon:'ğŸ‡±ğŸ‡·'),
     CountryData(name:'Libyan Arab Jamahiriya', stdCode:218,flagIcon:'ğŸ‡±ğŸ‡¾'),
     CountryData(name:'Liechtenstein', stdCode:423,flagIcon:'ğŸ‡±ğŸ‡®'),
     CountryData(name:'Lithuania', stdCode:370,flagIcon:'ğŸ‡±ğŸ‡¹'),
     CountryData(name:'Luxembourg', stdCode:352,flagIcon:'ğŸ‡±ğŸ‡º'),
     CountryData(name:'Macao', stdCode:853,flagIcon:'ğŸ‡²ğŸ‡´'),
     CountryData(name:'Madagascar', stdCode:261,flagIcon:'ğŸ‡²ğŸ‡¬'),
     CountryData(name:'Malawi', stdCode:265,flagIcon:'ğŸ‡²ğŸ‡¼'),
     CountryData(name:'Malaysia', stdCode:60,flagIcon:'ğŸ‡²ğŸ‡¾'),
     CountryData(name:'Maldives', stdCode:960,flagIcon:'ğŸ‡²ğŸ‡»'),
     CountryData(name:'Mali', stdCode:223,flagIcon:'ğŸ‡²ğŸ‡±'),
     CountryData(name:'Malta', stdCode:356,flagIcon:'ğŸ‡²ğŸ‡¹'),
     CountryData(name:'Marshall Islands', stdCode:692,flagIcon:'ğŸ‡²ğŸ‡­'),
     CountryData(name:'Martinique', stdCode:596,flagIcon:'ğŸ‡²ğŸ‡¶'),
     CountryData(name:'Mauritania', stdCode:222,flagIcon:'ğŸ‡²ğŸ‡·'),
     CountryData(name:'Mauritius', stdCode:230,flagIcon:'ğŸ‡²ğŸ‡º'),
     CountryData(name:'Mayotte', stdCode:262,flagIcon:'ğŸ‡¾ğŸ‡¹'),
     CountryData(name:'Mexico', stdCode:52,flagIcon:'ğŸ‡²ğŸ‡½'),
     CountryData(name:'Micronesia, Federated States of Micronesia', stdCode:691,flagIcon:'ğŸ‡«ğŸ‡²'),
     CountryData(name:'Moldova', stdCode:373,flagIcon:'ğŸ‡²ğŸ‡©'),
     CountryData(name:'Monaco', stdCode:377,flagIcon:'ğŸ‡²ğŸ‡¨'),
     CountryData(name:'Mongolia', stdCode:976,flagIcon:'ğŸ‡²ğŸ‡³'),
     CountryData(name:'Montenegro', stdCode:382,flagIcon:'ğŸ‡²ğŸ‡ª'),
     CountryData(name:'Montserrat', stdCode:1664,flagIcon:'ğŸ‡²ğŸ‡¸'),
     CountryData(name:'Morocco', stdCode:212,flagIcon:'ğŸ‡²ğŸ‡¦'),
     CountryData(name:'Mozambique', stdCode:258,flagIcon:'ğŸ‡²ğŸ‡¿'),
     CountryData(name:'Myanmar', stdCode:95,flagIcon:'ğŸ‡²ğŸ‡²'),
     CountryData(name:'Namibia', stdCode:264,flagIcon:'ğŸ‡³ğŸ‡¦'),
     CountryData(name:'Nauru', stdCode:674,flagIcon:'ğŸ‡³ğŸ‡·'),
     CountryData(name:'Nepal', stdCode:977,flagIcon:'ğŸ‡³ğŸ‡µ'),
     CountryData(name:'Netherlands', stdCode:31,flagIcon:'ğŸ‡³ğŸ‡±'),
     CountryData(name:'Netherlands Antilles', stdCode:599,flagIcon:''),
     CountryData(name:'New Caledonia', stdCode:687,flagIcon:'ğŸ‡³ğŸ‡¨'),
     CountryData(name:'New Zealand', stdCode:64,flagIcon:'ğŸ‡³ğŸ‡¿'),
     CountryData(name:'Nicaragua', stdCode:505,flagIcon:'ğŸ‡³ğŸ‡®'),
     CountryData(name:'Niger', stdCode:227,flagIcon:'ğŸ‡³ğŸ‡ª'),
     CountryData(name:'Nigeria', stdCode:234,flagIcon:'ğŸ‡³ğŸ‡¬'),
     CountryData(name:'Niue', stdCode:683,flagIcon:'ğŸ‡³ğŸ‡º'),
     CountryData(name:'Norfolk Island', stdCode:672,flagIcon:'ğŸ‡³ğŸ‡«'),
     CountryData(name:'North Macedonia', stdCode:389,flagIcon:'ğŸ‡²ğŸ‡°'),
     CountryData(name:'Northern Mariana Islands', stdCode:1670,flagIcon:'ğŸ‡²ğŸ‡µ'),
     CountryData(name:'Norway', stdCode:47,flagIcon:'ğŸ‡³ğŸ‡´'),
     CountryData(name:'Oman', stdCode:968,flagIcon:'ğŸ‡´ğŸ‡²'),
     CountryData(name:'Pakistan', stdCode:92,flagIcon:'ğŸ‡µğŸ‡°'),
     CountryData(name:'Palau', stdCode:680,flagIcon:'ğŸ‡µğŸ‡¼'),
     CountryData(name:'Palestinian Territory, Occupied', stdCode:970,flagIcon:'ğŸ‡µğŸ‡¸'),
     CountryData(name:'Panama', stdCode:507,flagIcon:'ğŸ‡µğŸ‡¦'),
     CountryData(name:'Papua New Guinea', stdCode:675,flagIcon:'ğŸ‡µğŸ‡¬'),
     CountryData(name:'Paraguay', stdCode:595,flagIcon:'ğŸ‡µğŸ‡¾'),
     CountryData(name:'Peru', stdCode:51,flagIcon:'ğŸ‡µğŸ‡ª'),
     CountryData(name:'Philippines', stdCode:63,flagIcon:'ğŸ‡µğŸ‡­'),
     CountryData(name:'Pitcairn', stdCode:64,flagIcon:'ğŸ‡µğŸ‡³'),
     CountryData(name:'Poland', stdCode:48,flagIcon:'ğŸ‡µğŸ‡±'),
     CountryData(name:'Portugal', stdCode:351,flagIcon:'ğŸ‡µğŸ‡¹'),
     CountryData(name:'Puerto Rico', stdCode:1939,flagIcon:'ğŸ‡µğŸ‡·'),
     CountryData(name:'Qatar', stdCode:974,flagIcon:'ğŸ‡¶ğŸ‡¦'),
     CountryData(name:'Reunion', stdCode:262,flagIcon:'ğŸ‡·ğŸ‡ª'),
     CountryData(name:'Romania', stdCode:40,flagIcon:'ğŸ‡·ğŸ‡´'),
     CountryData(name:'Russia', stdCode:7,flagIcon:'ğŸ‡·ğŸ‡º'),
     CountryData(name:'Rwanda', stdCode:250,flagIcon:'ğŸ‡·ğŸ‡¼'),
     CountryData(name:'Saint Barthelemy', stdCode:590,flagIcon:'ğŸ‡§ğŸ‡±'),
     CountryData(name:'Saint Helena, Ascension and Tristan Da Cunha', stdCode:290,flagIcon:'ğŸ‡¸ğŸ‡­'),
     CountryData(name:'Saint Kitts and Nevis', stdCode:1869,flagIcon:'ğŸ‡°ğŸ‡³'),
     CountryData(name:'Saint Lucia', stdCode:1758,flagIcon:'ğŸ‡±ğŸ‡¨'),
     CountryData(name:'Saint Martin', stdCode:590,flagIcon:'ğŸ‡²ğŸ‡«'),
     CountryData(name:'Saint Pierre and Miquelon', stdCode:508,flagIcon:'ğŸ‡µğŸ‡²'),
     CountryData(name:'Saint Vincent and the Grenadines', stdCode:1784,flagIcon:'ğŸ‡»ğŸ‡¨'),
     CountryData(name:'Samoa', stdCode:685,flagIcon:'ğŸ‡¼ğŸ‡¸'),
     CountryData(name:'San Marino', stdCode:378,flagIcon:'ğŸ‡¸ğŸ‡²'),
     CountryData(name:'Sao Tome and Principe', stdCode:239,flagIcon:'ğŸ‡¸ğŸ‡¹'),
     CountryData(name:'Saudi Arabia', stdCode:966,flagIcon:'ğŸ‡¸ğŸ‡¦'),
     CountryData(name:'Senegal', stdCode:221,flagIcon:'ğŸ‡¸ğŸ‡³'),
     CountryData(name:'Serbia', stdCode:381,flagIcon:'ğŸ‡·ğŸ‡¸'),
     CountryData(name:'Seychelles', stdCode:248,flagIcon:'ğŸ‡¸ğŸ‡¨'),
     CountryData(name:'Sierra Leone', stdCode:232,flagIcon:'ğŸ‡¸ğŸ‡±'),
     CountryData(name:'Singapore', stdCode:65,flagIcon:'ğŸ‡¸ğŸ‡¬'),
     CountryData(name:'Slovakia', stdCode:421,flagIcon:'ğŸ‡¸ğŸ‡°'),
     CountryData(name:'Slovenia', stdCode:386,flagIcon:'ğŸ‡¸ğŸ‡®'),
     CountryData(name:'Solomon Islands', stdCode:677,flagIcon:'ğŸ‡¸ğŸ‡§'),
     CountryData(name:'Somalia', stdCode:252,flagIcon:'ğŸ‡¸ğŸ‡´'),
     CountryData(name:'South Africa', stdCode:27,flagIcon:'ğŸ‡¿ğŸ‡¦'),
     CountryData(name:'South Georgia and the South Sandwich Islands', stdCode:500,flagIcon:'ğŸ‡¬ğŸ‡¸'),
     CountryData(name:'South Sudan', stdCode:211,flagIcon:'ğŸ‡¸ğŸ‡¸'),
     CountryData(name:'Spain', stdCode:34,flagIcon:'ğŸ‡ªğŸ‡¸'),
     CountryData(name:'Sri Lanka', stdCode:94,flagIcon:'ğŸ‡±ğŸ‡°'),
     CountryData(name:'Sudan', stdCode:249,flagIcon:'ğŸ‡¸ğŸ‡©'),
     CountryData(name:'Suriname', stdCode:597,flagIcon:'ğŸ‡¸ğŸ‡·'),
     CountryData(name:'Svalbard and Jan Mayen', stdCode:47,flagIcon:'ğŸ‡¸ğŸ‡¯'),
     CountryData(name:'Swaziland', stdCode:268,flagIcon:'ğŸ‡¸ğŸ‡¿'),
     CountryData(name:'Sweden', stdCode:46,flagIcon:'ğŸ‡¸ğŸ‡ª'),
     CountryData(name:'Switzerland', stdCode:41,flagIcon:'ğŸ‡¨ğŸ‡­'),
     CountryData(name:'Syrian Arab Republic', stdCode:963,flagIcon:'ğŸ‡¸ğŸ‡¾'),
     CountryData(name:'Taiwan', stdCode:886,flagIcon:'ğŸ‡¹ğŸ‡¼'),
     CountryData(name:'Tajikistan', stdCode:992,flagIcon:'ğŸ‡¹ğŸ‡¯'),
     CountryData(name:'Tanzania, United Republic of Tanzania', stdCode:255,flagIcon:'ğŸ‡¹ğŸ‡¿'),
     CountryData(name:'Thailand', stdCode:66,flagIcon:'ğŸ‡¹ğŸ‡­'),
     CountryData(name:'Timor-Leste', stdCode:670,flagIcon:'ğŸ‡¹ğŸ‡±'),
     CountryData(name:'Togo', stdCode:228,flagIcon:'ğŸ‡¹ğŸ‡¬'),
     CountryData(name:'Tokelau', stdCode:690,flagIcon:'ğŸ‡¹ğŸ‡°'),
     CountryData(name:'Tonga', stdCode:676,flagIcon:'ğŸ‡¹ğŸ‡´'),
     CountryData(name:'Trinidad and Tobago', stdCode:1868,flagIcon:'ğŸ‡¹ğŸ‡¹'),
     CountryData(name:'Tunisia', stdCode:216,flagIcon:'ğŸ‡¹ğŸ‡³'),
     CountryData(name:'TÃ¼rkiye', stdCode:90,flagIcon:'ğŸ‡¹ğŸ‡·'),
     CountryData(name:'Turkmenistan', stdCode:993,flagIcon:'ğŸ‡¹ğŸ‡²'),
     CountryData(name:'Turks and Caicos Islands', stdCode:1649,flagIcon:'ğŸ‡¹ğŸ‡¨'),
     CountryData(name:'Tuvalu', stdCode:688,flagIcon:'ğŸ‡¹ğŸ‡»'),
     CountryData(name:'Uganda', stdCode:256,flagIcon:'ğŸ‡ºğŸ‡¬'),
     CountryData(name:'Ukraine', stdCode:380,flagIcon:'ğŸ‡ºğŸ‡¦'),
     CountryData(name:'United Arab Emirates', stdCode:971,flagIcon:'ğŸ‡¦ğŸ‡ª'),
     CountryData(name:'United Kingdom', stdCode:44,flagIcon:'ğŸ‡¬ğŸ‡§'),
     CountryData(name:'United States', stdCode:1,flagIcon:'ğŸ‡ºğŸ‡¸'),
     CountryData(name:'Uruguay', stdCode:598,flagIcon:'ğŸ‡ºğŸ‡¾'),
     CountryData(name:'Uzbekistan', stdCode:998,flagIcon:'ğŸ‡ºğŸ‡¿'),
     CountryData(name:'Vanuatu', stdCode:678,flagIcon:'ğŸ‡»ğŸ‡º'),
     CountryData(name:'Venezuela, Bolivarian Republic of Venezuela', stdCode:58,flagIcon:'ğŸ‡»ğŸ‡ª'),
     CountryData(name:'Vietnam', stdCode:84,flagIcon:'ğŸ‡»ğŸ‡³'),
     CountryData(name:'Virgin Islands, British', stdCode:1284,flagIcon:'ğŸ‡»ğŸ‡¬'),
     CountryData(name:'Virgin Islands, U.S.', stdCode:1340,flagIcon:'ğŸ‡»ğŸ‡®'),
     CountryData(name:'Wallis and Futuna', stdCode:681,flagIcon:'ğŸ‡¼ğŸ‡«'),
     CountryData(name:'Yemen', stdCode:967,flagIcon:'ğŸ‡¾ğŸ‡ª'),
     CountryData(name:'Zambia', stdCode:260,flagIcon:'ğŸ‡¿ğŸ‡²'),
     CountryData(name:'Zimbabwe', stdCode:263,flagIcon:'ğŸ‡¿ğŸ‡¼'),
   ];
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Flutter Demo',
      theme: ThemeData(
        // This is the theme of your application.
        //
        // TRY THIS: Try running your application with "flutter run". You'll see
        // the application has a blue toolbar. Then, without quitting the app,
        // try changing the seedColor in the colorScheme below to Colors.green
        // and then invoke "hot reload" (save your changes or press the "hot
        // reload" button in a Flutter-supported IDE, or press "r" if you used
        // the command line to start the app).
        //
        // Notice that the counter didn't reset back to zero; the application
        // state is not lost during the reload. To reset the state, use hot
        // restart instead.
        //
        // This works for code too, not just values: Most code changes can be
        // tested with just a hot reload.
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home:  _AddParty(title: 'Add Party',countryDataList: countryDataList),
    );
  }
}

class _AddParty extends StatefulWidget {
  const _AddParty({super.key, required this.title, required this.countryDataList});

  // This widget is the home page of your application. It is stateful, meaning
  // that it has a State object (defined below) that contains fields that affect
  // how it looks.

  // This class is the configuration for the state. It holds the values (in this
  // case the title) provided by the parent (in this case the App widget) and
  // used by the build method of the State. Fields in a Widget subclass are
  // always marked "final".

  final String title;
  final List<CountryData> countryDataList;

  @override
  State<_AddParty> createState() => _AddPartyState();
}

class _AddPartyState extends State<_AddParty> {
  var partyText = TextEditingController();
  var contactText = TextEditingController();
  bool _isButtonEnabled = false;
  CountryData? selectedCountry;


  final CollectionReference _users =
  FirebaseFirestore.instance.collection('users');
  /*  await _users.add({"name":name });
      await _users.update({"name":name });
      await _users.doc(Id).delete();*/
  Future<void> _create(var name,var contact) async{
    //await _users.add({"Name":"test Name added"});
    await _users.add({"Name":name,"contact":contact});
  }
  @override
  void initState() {
    super.initState();
    selectedCountry = widget.countryDataList.first;
  }


  @override
  void dispose() {
    partyText.dispose();
    contactText.dispose();
    super.dispose();
  }

  void _ShowSnackBar(BuildContext context){
    final snackBar = SnackBar(
      content: const Text('Name & Contact should not be empty'),
      action: SnackBarAction(
        label: 'Undo',
        onPressed: () {
          // Perform some action
          // For example, you can undo the operation
          // or navigate to a different page.
        },
      ),
    );

    ScaffoldMessenger.of(context).showSnackBar(snackBar);
  }




  void _checkButtonStatus() {
    setState(() {
      /*_isButtonEnabled=(( partyText.text.trim().isNotEmpty &&
          contactText.text.trim().isNotEmpty )? true:false);*/
      /*_isButtonEnabled = emailText.text.isNotEmpty;
      _isButtonEnabled = passText.text.isNotEmpty;*/
      RegExp phoneNumberRegExp = RegExp(
          r'^[+]?[0-9]{1,3}[-\s.]?[(]?[0-9]{1,4}[)]?[-\s.]?[0-9]{1,6}[-\s.]?[0-9]{1,6}[-\s.]?[0-9]{1,12}$');

      _isButtonEnabled = ((partyText.text.trim().isNotEmpty &&
              contactText.text.trim().isNotEmpty)
          ? phoneNumberRegExp.hasMatch(contactText.text.trim())
          : false);
    });
  }

  @override
  Widget build(BuildContext context) {
    // This method is rerun every time setState is called, for instance as done
    // by the _incrementCounter method above.
    //
    // The Flutter framework has been optimized to make rerunning build methods
    // fast, so that you can just rebuild anything that needs updating rather
    // than having to individually change instances of widgets.

    return Scaffold(
      appBar: AppBar(
        // TRY THIS: Try changing the color here to a specific color (to
        // Colors.amber, perhaps?) and trigger a hot reload to see the AppBar
        // change color while the other colors stay the same.
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        // Here we take the value from the MyHomePage object that was created by
        // the App.build method, and use it to set our appbar title.
        title: Center(child: Text(widget.title)),
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(16.0), // Apply the desired padding here
          child: SizedBox(
              child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              TextField(
                controller: partyText,
                onChanged: (_) => _checkButtonStatus(),
                enabled: true,
                decoration: InputDecoration(
                    hintText: "Enter Party Name",
                    focusedBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(11.0),
                        borderSide: const BorderSide(
                            color: Colors.deepOrange, width: 2)),
                    enabledBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(11),
                        borderSide: const BorderSide(
                            color: Colors.blueAccent, width: 2)),
                    disabledBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(11),
                        borderSide:
                            const BorderSide(color: Colors.black45, width: 2)),
                    prefixIcon: const Icon(
                      Icons.perm_identity,
                      color: Colors.orange,
                    )),
              ),
              Container(
                height: 10,
              ),
/*
              TextField(
                controller: contactText,
                onChanged: (_) => _checkButtonStatus(),
                keyboardType: TextInputType.phone,
                decoration: InputDecoration(
                    hintText: "Enter Contact Number",
                    focusedBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(11.0),
                        borderSide: const BorderSide(
                            color: Colors.deepOrange, width: 2)),
                    enabledBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(11),
                        borderSide: const BorderSide(
                            color: Colors.blueAccent, width: 2)),
                    disabledBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(11),
                        borderSide:
                            const BorderSide(color: Colors.black45, width: 2)),
                    prefixIcon: const Icon(
                      Icons.phone_android_outlined,
                      color: Colors.orange,
                    )),
              ),
*/

              Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  children: [
                    DropdownButton<CountryData>(
                      value: selectedCountry,
                      onChanged: (CountryData? newValue) {
                        setState(() {
                          selectedCountry = newValue;
                        });
                      },
                      underline: SizedBox(),
                      items: widget.countryDataList.map<DropdownMenuItem<CountryData>>((CountryData countryData) {
                        return DropdownMenuItem<CountryData>(
                          value: countryData,
                          child: Row(
                            children: [
                              Text(countryData.flagIcon),
                              SizedBox(width: 7.0),
                              Text('(+${countryData.stdCode})'),
                            ],
                          ),
                        );
                      }).toList(),
                    ),

                    SizedBox(width: 246,
                      child: TextField(
                        controller: contactText,
                        onChanged: (_) => _checkButtonStatus(),
                        keyboardType: TextInputType.phone,
                        decoration: InputDecoration(
                          hintText: "Enter Contact Number",
                          focusedBorder: OutlineInputBorder(
                              borderRadius: BorderRadius.circular(11.0),
                              borderSide:
                              const BorderSide(color: Colors.deepOrange, width: 2)),
                          enabledBorder: OutlineInputBorder(
                              borderRadius: BorderRadius.circular(11),
                              borderSide:
                              const BorderSide(color: Colors.blueAccent, width: 2)),
                          disabledBorder: OutlineInputBorder(
                              borderRadius: BorderRadius.circular(11),
                              borderSide:
                              const BorderSide(color: Colors.black45, width: 2)),
                          /*prefixIcon: const Icon(
                    Icons.phone_android_outlined,
                    color: Colors.orange,
                  )*/
                        ),
                      ),
                    )
                  ],
                ),

              Container(
                height: 10,
              ),
/*              ElevatedButton(

                onPressed: _isButtonEnabled ? () => _performAction() : null,
                child: Text('Button'),
              ),*/
            ],
          )),
        ),
      ),

      floatingActionButton: FloatingActionButton(
        //onPressed: () {},
        onPressed: _isButtonEnabled ? () => _performAction() : () => _ShowSnackBar(context),

        tooltip: 'Increment',
        child: const Icon(Icons.arrow_forward),
      ), // This trailing comma makes auto-formatting nicer for build methods.
    );
  }

  void _performAction() {
    // Perform the action when the button is pressed
    // Add your logic here
   // print('Button pressed! +${selectedCountry?.stdCode}${contactText.text.trim()}');

    _create(partyText.text.trim(),'+${selectedCountry?.stdCode}${contactText.text.trim()}');
  }
}
